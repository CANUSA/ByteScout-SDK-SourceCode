<?php
/**
 * BarcodeTypeSelector
 *
 * PHP version 5
 *
 * @category Class
 * @package  Bytescout\Client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Bytescout\Client\Model;

use \ArrayAccess;
/**
 * BarcodeTypeSelector Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     Bytescout\Client
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class BarcodeTypeSelector implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'ean8' => 'bool',
        'gtin8' => 'bool',
        'ean13' => 'bool',
        'gtin13' => 'bool',
        'upce' => 'bool',
        'upca' => 'bool',
        'gtin12' => 'bool',
        'interleaved2of5' => 'bool',
        'circulari2of5' => 'bool',
        'itf14' => 'bool',
        'gtin14' => 'bool',
        'code39' => 'bool',
        'code39Extended' => 'bool',
        'code39Mod43' => 'bool',
        'code39Mod43Extended' => 'bool',
        'pzn' => 'bool',
        'upu' => 'bool',
        'code128' => 'bool',
        'ean2' => 'bool',
        'ean5' => 'bool',
        'gs1' => 'bool',
        'codabar' => 'bool',
        'trioptic' => 'bool',
        'patchCode' => 'bool',
        'gs1DataBarOmnidirectional' => 'bool',
        'gs1DataBarExpanded' => 'bool',
        'gs1DataBarLimited' => 'bool',
        'gs1DataBarStacked' => 'bool',
        'gs1DataBarExpandedStacked' => 'bool',
        'pdf417' => 'bool',
        'dataMatrix' => 'bool',
        'qrCode' => 'bool',
        'aztec' => 'bool',
        'maxiCode' => 'bool',
        'micr' => 'bool',
        'intelligentMail' => 'bool',
        'royalMail' => 'bool',
        'royalMailKIX' => 'bool',
        'australianPostCode' => 'bool',
        'codablockF' => 'bool',
        'code16K' => 'bool',
        'postNet' => 'bool',
        'microPDF' => 'bool',
        'code93' => 'bool',
        'msi' => 'bool',
        'pharmacode' => 'bool',
        'segment' => 'bool',
        'circle' => 'bool',
        'oval' => 'bool',
        'checkbox' => 'bool',
        'horizontalLine' => 'bool',
        'verticalLine' => 'bool',
        'underlinedField' => 'bool',
        'all1D' => 'bool',
        'all2D' => 'bool',
        'allOMRElements' => 'bool',
        'all' => 'bool'
    );
  
    static function swaggerTypes() {
        return self::$swaggerTypes;
    }

    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'ean8' => 'ean8',
        'gtin8' => 'gtin8',
        'ean13' => 'ean13',
        'gtin13' => 'gtin13',
        'upce' => 'upce',
        'upca' => 'upca',
        'gtin12' => 'gtin12',
        'interleaved2of5' => 'interleaved2of5',
        'circulari2of5' => 'circulari2of5',
        'itf14' => 'itf14',
        'gtin14' => 'gtin14',
        'code39' => 'code39',
        'code39Extended' => 'code39Extended',
        'code39Mod43' => 'code39Mod43',
        'code39Mod43Extended' => 'code39Mod43Extended',
        'pzn' => 'pzn',
        'upu' => 'upu',
        'code128' => 'code128',
        'ean2' => 'ean2',
        'ean5' => 'ean5',
        'gs1' => 'gs1',
        'codabar' => 'codabar',
        'trioptic' => 'trioptic',
        'patchCode' => 'patchCode',
        'gs1DataBarOmnidirectional' => 'gs1DataBarOmnidirectional',
        'gs1DataBarExpanded' => 'gs1DataBarExpanded',
        'gs1DataBarLimited' => 'gs1DataBarLimited',
        'gs1DataBarStacked' => 'gs1DataBarStacked',
        'gs1DataBarExpandedStacked' => 'gs1DataBarExpandedStacked',
        'pdf417' => 'pdf417',
        'dataMatrix' => 'dataMatrix',
        'qrCode' => 'qrCode',
        'aztec' => 'aztec',
        'maxiCode' => 'maxiCode',
        'micr' => 'micr',
        'intelligentMail' => 'intelligentMail',
        'royalMail' => 'royalMail',
        'royalMailKIX' => 'royalMailKIX',
        'australianPostCode' => 'australianPostCode',
        'codablockF' => 'codablockF',
        'code16K' => 'code16K',
        'postNet' => 'postNet',
        'microPDF' => 'microPDF',
        'code93' => 'code93',
        'msi' => 'msi',
        'pharmacode' => 'pharmacode',
        'segment' => 'segment',
        'circle' => 'circle',
        'oval' => 'oval',
        'checkbox' => 'checkbox',
        'horizontalLine' => 'horizontalLine',
        'verticalLine' => 'verticalLine',
        'underlinedField' => 'underlinedField',
        'all1D' => 'all1D',
        'all2D' => 'all2D',
        'allOMRElements' => 'allOMRElements',
        'all' => 'all'
    );
  
    static function attributeMap() {
        return self::$attributeMap;
    }

    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'ean8' => 'setEan8',
        'gtin8' => 'setGtin8',
        'ean13' => 'setEan13',
        'gtin13' => 'setGtin13',
        'upce' => 'setUpce',
        'upca' => 'setUpca',
        'gtin12' => 'setGtin12',
        'interleaved2of5' => 'setInterleaved2of5',
        'circulari2of5' => 'setCirculari2of5',
        'itf14' => 'setItf14',
        'gtin14' => 'setGtin14',
        'code39' => 'setCode39',
        'code39Extended' => 'setCode39Extended',
        'code39Mod43' => 'setCode39Mod43',
        'code39Mod43Extended' => 'setCode39Mod43Extended',
        'pzn' => 'setPzn',
        'upu' => 'setUpu',
        'code128' => 'setCode128',
        'ean2' => 'setEan2',
        'ean5' => 'setEan5',
        'gs1' => 'setGs1',
        'codabar' => 'setCodabar',
        'trioptic' => 'setTrioptic',
        'patchCode' => 'setPatchCode',
        'gs1DataBarOmnidirectional' => 'setGs1DataBarOmnidirectional',
        'gs1DataBarExpanded' => 'setGs1DataBarExpanded',
        'gs1DataBarLimited' => 'setGs1DataBarLimited',
        'gs1DataBarStacked' => 'setGs1DataBarStacked',
        'gs1DataBarExpandedStacked' => 'setGs1DataBarExpandedStacked',
        'pdf417' => 'setPdf417',
        'dataMatrix' => 'setDataMatrix',
        'qrCode' => 'setQrCode',
        'aztec' => 'setAztec',
        'maxiCode' => 'setMaxiCode',
        'micr' => 'setMicr',
        'intelligentMail' => 'setIntelligentMail',
        'royalMail' => 'setRoyalMail',
        'royalMailKIX' => 'setRoyalMailKIX',
        'australianPostCode' => 'setAustralianPostCode',
        'codablockF' => 'setCodablockF',
        'code16K' => 'setCode16K',
        'postNet' => 'setPostNet',
        'microPDF' => 'setMicroPDF',
        'code93' => 'setCode93',
        'msi' => 'setMsi',
        'pharmacode' => 'setPharmacode',
        'segment' => 'setSegment',
        'circle' => 'setCircle',
        'oval' => 'setOval',
        'checkbox' => 'setCheckbox',
        'horizontalLine' => 'setHorizontalLine',
        'verticalLine' => 'setVerticalLine',
        'underlinedField' => 'setUnderlinedField',
        'all1D' => 'setAll1D',
        'all2D' => 'setAll2D',
        'allOMRElements' => 'setAllOMRElements',
        'all' => 'setAll'
    );
  
    static function setters() {
        return self::$setters;
    }

    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'ean8' => 'getEan8',
        'gtin8' => 'getGtin8',
        'ean13' => 'getEan13',
        'gtin13' => 'getGtin13',
        'upce' => 'getUpce',
        'upca' => 'getUpca',
        'gtin12' => 'getGtin12',
        'interleaved2of5' => 'getInterleaved2of5',
        'circulari2of5' => 'getCirculari2of5',
        'itf14' => 'getItf14',
        'gtin14' => 'getGtin14',
        'code39' => 'getCode39',
        'code39Extended' => 'getCode39Extended',
        'code39Mod43' => 'getCode39Mod43',
        'code39Mod43Extended' => 'getCode39Mod43Extended',
        'pzn' => 'getPzn',
        'upu' => 'getUpu',
        'code128' => 'getCode128',
        'ean2' => 'getEan2',
        'ean5' => 'getEan5',
        'gs1' => 'getGs1',
        'codabar' => 'getCodabar',
        'trioptic' => 'getTrioptic',
        'patchCode' => 'getPatchCode',
        'gs1DataBarOmnidirectional' => 'getGs1DataBarOmnidirectional',
        'gs1DataBarExpanded' => 'getGs1DataBarExpanded',
        'gs1DataBarLimited' => 'getGs1DataBarLimited',
        'gs1DataBarStacked' => 'getGs1DataBarStacked',
        'gs1DataBarExpandedStacked' => 'getGs1DataBarExpandedStacked',
        'pdf417' => 'getPdf417',
        'dataMatrix' => 'getDataMatrix',
        'qrCode' => 'getQrCode',
        'aztec' => 'getAztec',
        'maxiCode' => 'getMaxiCode',
        'micr' => 'getMicr',
        'intelligentMail' => 'getIntelligentMail',
        'royalMail' => 'getRoyalMail',
        'royalMailKIX' => 'getRoyalMailKIX',
        'australianPostCode' => 'getAustralianPostCode',
        'codablockF' => 'getCodablockF',
        'code16K' => 'getCode16K',
        'postNet' => 'getPostNet',
        'microPDF' => 'getMicroPDF',
        'code93' => 'getCode93',
        'msi' => 'getMsi',
        'pharmacode' => 'getPharmacode',
        'segment' => 'getSegment',
        'circle' => 'getCircle',
        'oval' => 'getOval',
        'checkbox' => 'getCheckbox',
        'horizontalLine' => 'getHorizontalLine',
        'verticalLine' => 'getVerticalLine',
        'underlinedField' => 'getUnderlinedField',
        'all1D' => 'getAll1D',
        'all2D' => 'getAll2D',
        'allOMRElements' => 'getAllOMRElements',
        'all' => 'getAll'
    );
  
    static function getters() {
        return self::$getters;
    }

    
    /**
      * $ean8 
      * @var bool
      */
    protected $ean8;
    
    /**
      * $gtin8 
      * @var bool
      */
    protected $gtin8;
    
    /**
      * $ean13 
      * @var bool
      */
    protected $ean13;
    
    /**
      * $gtin13 
      * @var bool
      */
    protected $gtin13;
    
    /**
      * $upce 
      * @var bool
      */
    protected $upce;
    
    /**
      * $upca 
      * @var bool
      */
    protected $upca;
    
    /**
      * $gtin12 
      * @var bool
      */
    protected $gtin12;
    
    /**
      * $interleaved2of5 
      * @var bool
      */
    protected $interleaved2of5;
    
    /**
      * $circulari2of5 
      * @var bool
      */
    protected $circulari2of5;
    
    /**
      * $itf14 
      * @var bool
      */
    protected $itf14;
    
    /**
      * $gtin14 
      * @var bool
      */
    protected $gtin14;
    
    /**
      * $code39 
      * @var bool
      */
    protected $code39;
    
    /**
      * $code39Extended 
      * @var bool
      */
    protected $code39Extended;
    
    /**
      * $code39Mod43 
      * @var bool
      */
    protected $code39Mod43;
    
    /**
      * $code39Mod43Extended 
      * @var bool
      */
    protected $code39Mod43Extended;
    
    /**
      * $pzn 
      * @var bool
      */
    protected $pzn;
    
    /**
      * $upu 
      * @var bool
      */
    protected $upu;
    
    /**
      * $code128 
      * @var bool
      */
    protected $code128;
    
    /**
      * $ean2 
      * @var bool
      */
    protected $ean2;
    
    /**
      * $ean5 
      * @var bool
      */
    protected $ean5;
    
    /**
      * $gs1 
      * @var bool
      */
    protected $gs1;
    
    /**
      * $codabar 
      * @var bool
      */
    protected $codabar;
    
    /**
      * $trioptic 
      * @var bool
      */
    protected $trioptic;
    
    /**
      * $patchCode 
      * @var bool
      */
    protected $patchCode;
    
    /**
      * $gs1DataBarOmnidirectional 
      * @var bool
      */
    protected $gs1DataBarOmnidirectional;
    
    /**
      * $gs1DataBarExpanded 
      * @var bool
      */
    protected $gs1DataBarExpanded;
    
    /**
      * $gs1DataBarLimited 
      * @var bool
      */
    protected $gs1DataBarLimited;
    
    /**
      * $gs1DataBarStacked 
      * @var bool
      */
    protected $gs1DataBarStacked;
    
    /**
      * $gs1DataBarExpandedStacked 
      * @var bool
      */
    protected $gs1DataBarExpandedStacked;
    
    /**
      * $pdf417 
      * @var bool
      */
    protected $pdf417;
    
    /**
      * $dataMatrix 
      * @var bool
      */
    protected $dataMatrix;
    
    /**
      * $qrCode 
      * @var bool
      */
    protected $qrCode;
    
    /**
      * $aztec 
      * @var bool
      */
    protected $aztec;
    
    /**
      * $maxiCode 
      * @var bool
      */
    protected $maxiCode;
    
    /**
      * $micr 
      * @var bool
      */
    protected $micr;
    
    /**
      * $intelligentMail 
      * @var bool
      */
    protected $intelligentMail;
    
    /**
      * $royalMail 
      * @var bool
      */
    protected $royalMail;
    
    /**
      * $royalMailKIX 
      * @var bool
      */
    protected $royalMailKIX;
    
    /**
      * $australianPostCode 
      * @var bool
      */
    protected $australianPostCode;
    
    /**
      * $codablockF 
      * @var bool
      */
    protected $codablockF;
    
    /**
      * $code16K 
      * @var bool
      */
    protected $code16K;
    
    /**
      * $postNet 
      * @var bool
      */
    protected $postNet;
    
    /**
      * $microPDF 
      * @var bool
      */
    protected $microPDF;
    
    /**
      * $code93 
      * @var bool
      */
    protected $code93;
    
    /**
      * $msi 
      * @var bool
      */
    protected $msi;
    
    /**
      * $pharmacode 
      * @var bool
      */
    protected $pharmacode;
    
    /**
      * $segment 
      * @var bool
      */
    protected $segment;
    
    /**
      * $circle 
      * @var bool
      */
    protected $circle;
    
    /**
      * $oval 
      * @var bool
      */
    protected $oval;
    
    /**
      * $checkbox 
      * @var bool
      */
    protected $checkbox;
    
    /**
      * $horizontalLine 
      * @var bool
      */
    protected $horizontalLine;
    
    /**
      * $verticalLine 
      * @var bool
      */
    protected $verticalLine;
    
    /**
      * $underlinedField 
      * @var bool
      */
    protected $underlinedField;
    
    /**
      * $all1D 
      * @var bool
      */
    protected $all1D;
    
    /**
      * $all2D 
      * @var bool
      */
    protected $all2D;
    
    /**
      * $allOMRElements 
      * @var bool
      */
    protected $allOMRElements;
    
    /**
      * $all 
      * @var bool
      */
    protected $all;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        
        if ($data != null) {
            $this->ean8 = $data["ean8"];
            $this->gtin8 = $data["gtin8"];
            $this->ean13 = $data["ean13"];
            $this->gtin13 = $data["gtin13"];
            $this->upce = $data["upce"];
            $this->upca = $data["upca"];
            $this->gtin12 = $data["gtin12"];
            $this->interleaved2of5 = $data["interleaved2of5"];
            $this->circulari2of5 = $data["circulari2of5"];
            $this->itf14 = $data["itf14"];
            $this->gtin14 = $data["gtin14"];
            $this->code39 = $data["code39"];
            $this->code39Extended = $data["code39Extended"];
            $this->code39Mod43 = $data["code39Mod43"];
            $this->code39Mod43Extended = $data["code39Mod43Extended"];
            $this->pzn = $data["pzn"];
            $this->upu = $data["upu"];
            $this->code128 = $data["code128"];
            $this->ean2 = $data["ean2"];
            $this->ean5 = $data["ean5"];
            $this->gs1 = $data["gs1"];
            $this->codabar = $data["codabar"];
            $this->trioptic = $data["trioptic"];
            $this->patchCode = $data["patchCode"];
            $this->gs1DataBarOmnidirectional = $data["gs1DataBarOmnidirectional"];
            $this->gs1DataBarExpanded = $data["gs1DataBarExpanded"];
            $this->gs1DataBarLimited = $data["gs1DataBarLimited"];
            $this->gs1DataBarStacked = $data["gs1DataBarStacked"];
            $this->gs1DataBarExpandedStacked = $data["gs1DataBarExpandedStacked"];
            $this->pdf417 = $data["pdf417"];
            $this->dataMatrix = $data["dataMatrix"];
            $this->qrCode = $data["qrCode"];
            $this->aztec = $data["aztec"];
            $this->maxiCode = $data["maxiCode"];
            $this->micr = $data["micr"];
            $this->intelligentMail = $data["intelligentMail"];
            $this->royalMail = $data["royalMail"];
            $this->royalMailKIX = $data["royalMailKIX"];
            $this->australianPostCode = $data["australianPostCode"];
            $this->codablockF = $data["codablockF"];
            $this->code16K = $data["code16K"];
            $this->postNet = $data["postNet"];
            $this->microPDF = $data["microPDF"];
            $this->code93 = $data["code93"];
            $this->msi = $data["msi"];
            $this->pharmacode = $data["pharmacode"];
            $this->segment = $data["segment"];
            $this->circle = $data["circle"];
            $this->oval = $data["oval"];
            $this->checkbox = $data["checkbox"];
            $this->horizontalLine = $data["horizontalLine"];
            $this->verticalLine = $data["verticalLine"];
            $this->underlinedField = $data["underlinedField"];
            $this->all1D = $data["all1D"];
            $this->all2D = $data["all2D"];
            $this->allOMRElements = $data["allOMRElements"];
            $this->all = $data["all"];
        }
    }
    
    /**
     * Gets ean8
     * @return bool
     */
    public function getEan8()
    {
        return $this->ean8;
    }
  
    /**
     * Sets ean8
     * @param bool $ean8 
     * @return $this
     */
    public function setEan8($ean8)
    {
        
        $this->ean8 = $ean8;
        return $this;
    }
    
    /**
     * Gets gtin8
     * @return bool
     */
    public function getGtin8()
    {
        return $this->gtin8;
    }
  
    /**
     * Sets gtin8
     * @param bool $gtin8 
     * @return $this
     */
    public function setGtin8($gtin8)
    {
        
        $this->gtin8 = $gtin8;
        return $this;
    }
    
    /**
     * Gets ean13
     * @return bool
     */
    public function getEan13()
    {
        return $this->ean13;
    }
  
    /**
     * Sets ean13
     * @param bool $ean13 
     * @return $this
     */
    public function setEan13($ean13)
    {
        
        $this->ean13 = $ean13;
        return $this;
    }
    
    /**
     * Gets gtin13
     * @return bool
     */
    public function getGtin13()
    {
        return $this->gtin13;
    }
  
    /**
     * Sets gtin13
     * @param bool $gtin13 
     * @return $this
     */
    public function setGtin13($gtin13)
    {
        
        $this->gtin13 = $gtin13;
        return $this;
    }
    
    /**
     * Gets upce
     * @return bool
     */
    public function getUpce()
    {
        return $this->upce;
    }
  
    /**
     * Sets upce
     * @param bool $upce 
     * @return $this
     */
    public function setUpce($upce)
    {
        
        $this->upce = $upce;
        return $this;
    }
    
    /**
     * Gets upca
     * @return bool
     */
    public function getUpca()
    {
        return $this->upca;
    }
  
    /**
     * Sets upca
     * @param bool $upca 
     * @return $this
     */
    public function setUpca($upca)
    {
        
        $this->upca = $upca;
        return $this;
    }
    
    /**
     * Gets gtin12
     * @return bool
     */
    public function getGtin12()
    {
        return $this->gtin12;
    }
  
    /**
     * Sets gtin12
     * @param bool $gtin12 
     * @return $this
     */
    public function setGtin12($gtin12)
    {
        
        $this->gtin12 = $gtin12;
        return $this;
    }
    
    /**
     * Gets interleaved2of5
     * @return bool
     */
    public function getInterleaved2of5()
    {
        return $this->interleaved2of5;
    }
  
    /**
     * Sets interleaved2of5
     * @param bool $interleaved2of5 
     * @return $this
     */
    public function setInterleaved2of5($interleaved2of5)
    {
        
        $this->interleaved2of5 = $interleaved2of5;
        return $this;
    }
    
    /**
     * Gets circulari2of5
     * @return bool
     */
    public function getCirculari2of5()
    {
        return $this->circulari2of5;
    }
  
    /**
     * Sets circulari2of5
     * @param bool $circulari2of5 
     * @return $this
     */
    public function setCirculari2of5($circulari2of5)
    {
        
        $this->circulari2of5 = $circulari2of5;
        return $this;
    }
    
    /**
     * Gets itf14
     * @return bool
     */
    public function getItf14()
    {
        return $this->itf14;
    }
  
    /**
     * Sets itf14
     * @param bool $itf14 
     * @return $this
     */
    public function setItf14($itf14)
    {
        
        $this->itf14 = $itf14;
        return $this;
    }
    
    /**
     * Gets gtin14
     * @return bool
     */
    public function getGtin14()
    {
        return $this->gtin14;
    }
  
    /**
     * Sets gtin14
     * @param bool $gtin14 
     * @return $this
     */
    public function setGtin14($gtin14)
    {
        
        $this->gtin14 = $gtin14;
        return $this;
    }
    
    /**
     * Gets code39
     * @return bool
     */
    public function getCode39()
    {
        return $this->code39;
    }
  
    /**
     * Sets code39
     * @param bool $code39 
     * @return $this
     */
    public function setCode39($code39)
    {
        
        $this->code39 = $code39;
        return $this;
    }
    
    /**
     * Gets code39Extended
     * @return bool
     */
    public function getCode39Extended()
    {
        return $this->code39Extended;
    }
  
    /**
     * Sets code39Extended
     * @param bool $code39Extended 
     * @return $this
     */
    public function setCode39Extended($code39Extended)
    {
        
        $this->code39Extended = $code39Extended;
        return $this;
    }
    
    /**
     * Gets code39Mod43
     * @return bool
     */
    public function getCode39Mod43()
    {
        return $this->code39Mod43;
    }
  
    /**
     * Sets code39Mod43
     * @param bool $code39Mod43 
     * @return $this
     */
    public function setCode39Mod43($code39Mod43)
    {
        
        $this->code39Mod43 = $code39Mod43;
        return $this;
    }
    
    /**
     * Gets code39Mod43Extended
     * @return bool
     */
    public function getCode39Mod43Extended()
    {
        return $this->code39Mod43Extended;
    }
  
    /**
     * Sets code39Mod43Extended
     * @param bool $code39Mod43Extended 
     * @return $this
     */
    public function setCode39Mod43Extended($code39Mod43Extended)
    {
        
        $this->code39Mod43Extended = $code39Mod43Extended;
        return $this;
    }
    
    /**
     * Gets pzn
     * @return bool
     */
    public function getPzn()
    {
        return $this->pzn;
    }
  
    /**
     * Sets pzn
     * @param bool $pzn 
     * @return $this
     */
    public function setPzn($pzn)
    {
        
        $this->pzn = $pzn;
        return $this;
    }
    
    /**
     * Gets upu
     * @return bool
     */
    public function getUpu()
    {
        return $this->upu;
    }
  
    /**
     * Sets upu
     * @param bool $upu 
     * @return $this
     */
    public function setUpu($upu)
    {
        
        $this->upu = $upu;
        return $this;
    }
    
    /**
     * Gets code128
     * @return bool
     */
    public function getCode128()
    {
        return $this->code128;
    }
  
    /**
     * Sets code128
     * @param bool $code128 
     * @return $this
     */
    public function setCode128($code128)
    {
        
        $this->code128 = $code128;
        return $this;
    }
    
    /**
     * Gets ean2
     * @return bool
     */
    public function getEan2()
    {
        return $this->ean2;
    }
  
    /**
     * Sets ean2
     * @param bool $ean2 
     * @return $this
     */
    public function setEan2($ean2)
    {
        
        $this->ean2 = $ean2;
        return $this;
    }
    
    /**
     * Gets ean5
     * @return bool
     */
    public function getEan5()
    {
        return $this->ean5;
    }
  
    /**
     * Sets ean5
     * @param bool $ean5 
     * @return $this
     */
    public function setEan5($ean5)
    {
        
        $this->ean5 = $ean5;
        return $this;
    }
    
    /**
     * Gets gs1
     * @return bool
     */
    public function getGs1()
    {
        return $this->gs1;
    }
  
    /**
     * Sets gs1
     * @param bool $gs1 
     * @return $this
     */
    public function setGs1($gs1)
    {
        
        $this->gs1 = $gs1;
        return $this;
    }
    
    /**
     * Gets codabar
     * @return bool
     */
    public function getCodabar()
    {
        return $this->codabar;
    }
  
    /**
     * Sets codabar
     * @param bool $codabar 
     * @return $this
     */
    public function setCodabar($codabar)
    {
        
        $this->codabar = $codabar;
        return $this;
    }
    
    /**
     * Gets trioptic
     * @return bool
     */
    public function getTrioptic()
    {
        return $this->trioptic;
    }
  
    /**
     * Sets trioptic
     * @param bool $trioptic 
     * @return $this
     */
    public function setTrioptic($trioptic)
    {
        
        $this->trioptic = $trioptic;
        return $this;
    }
    
    /**
     * Gets patchCode
     * @return bool
     */
    public function getPatchCode()
    {
        return $this->patchCode;
    }
  
    /**
     * Sets patchCode
     * @param bool $patchCode 
     * @return $this
     */
    public function setPatchCode($patchCode)
    {
        
        $this->patchCode = $patchCode;
        return $this;
    }
    
    /**
     * Gets gs1DataBarOmnidirectional
     * @return bool
     */
    public function getGs1DataBarOmnidirectional()
    {
        return $this->gs1DataBarOmnidirectional;
    }
  
    /**
     * Sets gs1DataBarOmnidirectional
     * @param bool $gs1DataBarOmnidirectional 
     * @return $this
     */
    public function setGs1DataBarOmnidirectional($gs1DataBarOmnidirectional)
    {
        
        $this->gs1DataBarOmnidirectional = $gs1DataBarOmnidirectional;
        return $this;
    }
    
    /**
     * Gets gs1DataBarExpanded
     * @return bool
     */
    public function getGs1DataBarExpanded()
    {
        return $this->gs1DataBarExpanded;
    }
  
    /**
     * Sets gs1DataBarExpanded
     * @param bool $gs1DataBarExpanded 
     * @return $this
     */
    public function setGs1DataBarExpanded($gs1DataBarExpanded)
    {
        
        $this->gs1DataBarExpanded = $gs1DataBarExpanded;
        return $this;
    }
    
    /**
     * Gets gs1DataBarLimited
     * @return bool
     */
    public function getGs1DataBarLimited()
    {
        return $this->gs1DataBarLimited;
    }
  
    /**
     * Sets gs1DataBarLimited
     * @param bool $gs1DataBarLimited 
     * @return $this
     */
    public function setGs1DataBarLimited($gs1DataBarLimited)
    {
        
        $this->gs1DataBarLimited = $gs1DataBarLimited;
        return $this;
    }
    
    /**
     * Gets gs1DataBarStacked
     * @return bool
     */
    public function getGs1DataBarStacked()
    {
        return $this->gs1DataBarStacked;
    }
  
    /**
     * Sets gs1DataBarStacked
     * @param bool $gs1DataBarStacked 
     * @return $this
     */
    public function setGs1DataBarStacked($gs1DataBarStacked)
    {
        
        $this->gs1DataBarStacked = $gs1DataBarStacked;
        return $this;
    }
    
    /**
     * Gets gs1DataBarExpandedStacked
     * @return bool
     */
    public function getGs1DataBarExpandedStacked()
    {
        return $this->gs1DataBarExpandedStacked;
    }
  
    /**
     * Sets gs1DataBarExpandedStacked
     * @param bool $gs1DataBarExpandedStacked 
     * @return $this
     */
    public function setGs1DataBarExpandedStacked($gs1DataBarExpandedStacked)
    {
        
        $this->gs1DataBarExpandedStacked = $gs1DataBarExpandedStacked;
        return $this;
    }
    
    /**
     * Gets pdf417
     * @return bool
     */
    public function getPdf417()
    {
        return $this->pdf417;
    }
  
    /**
     * Sets pdf417
     * @param bool $pdf417 
     * @return $this
     */
    public function setPdf417($pdf417)
    {
        
        $this->pdf417 = $pdf417;
        return $this;
    }
    
    /**
     * Gets dataMatrix
     * @return bool
     */
    public function getDataMatrix()
    {
        return $this->dataMatrix;
    }
  
    /**
     * Sets dataMatrix
     * @param bool $dataMatrix 
     * @return $this
     */
    public function setDataMatrix($dataMatrix)
    {
        
        $this->dataMatrix = $dataMatrix;
        return $this;
    }
    
    /**
     * Gets qrCode
     * @return bool
     */
    public function getQrCode()
    {
        return $this->qrCode;
    }
  
    /**
     * Sets qrCode
     * @param bool $qrCode 
     * @return $this
     */
    public function setQrCode($qrCode)
    {
        
        $this->qrCode = $qrCode;
        return $this;
    }
    
    /**
     * Gets aztec
     * @return bool
     */
    public function getAztec()
    {
        return $this->aztec;
    }
  
    /**
     * Sets aztec
     * @param bool $aztec 
     * @return $this
     */
    public function setAztec($aztec)
    {
        
        $this->aztec = $aztec;
        return $this;
    }
    
    /**
     * Gets maxiCode
     * @return bool
     */
    public function getMaxiCode()
    {
        return $this->maxiCode;
    }
  
    /**
     * Sets maxiCode
     * @param bool $maxiCode 
     * @return $this
     */
    public function setMaxiCode($maxiCode)
    {
        
        $this->maxiCode = $maxiCode;
        return $this;
    }
    
    /**
     * Gets micr
     * @return bool
     */
    public function getMicr()
    {
        return $this->micr;
    }
  
    /**
     * Sets micr
     * @param bool $micr 
     * @return $this
     */
    public function setMicr($micr)
    {
        
        $this->micr = $micr;
        return $this;
    }
    
    /**
     * Gets intelligentMail
     * @return bool
     */
    public function getIntelligentMail()
    {
        return $this->intelligentMail;
    }
  
    /**
     * Sets intelligentMail
     * @param bool $intelligentMail 
     * @return $this
     */
    public function setIntelligentMail($intelligentMail)
    {
        
        $this->intelligentMail = $intelligentMail;
        return $this;
    }
    
    /**
     * Gets royalMail
     * @return bool
     */
    public function getRoyalMail()
    {
        return $this->royalMail;
    }
  
    /**
     * Sets royalMail
     * @param bool $royalMail 
     * @return $this
     */
    public function setRoyalMail($royalMail)
    {
        
        $this->royalMail = $royalMail;
        return $this;
    }
    
    /**
     * Gets royalMailKIX
     * @return bool
     */
    public function getRoyalMailKIX()
    {
        return $this->royalMailKIX;
    }
  
    /**
     * Sets royalMailKIX
     * @param bool $royalMailKIX 
     * @return $this
     */
    public function setRoyalMailKIX($royalMailKIX)
    {
        
        $this->royalMailKIX = $royalMailKIX;
        return $this;
    }
    
    /**
     * Gets australianPostCode
     * @return bool
     */
    public function getAustralianPostCode()
    {
        return $this->australianPostCode;
    }
  
    /**
     * Sets australianPostCode
     * @param bool $australianPostCode 
     * @return $this
     */
    public function setAustralianPostCode($australianPostCode)
    {
        
        $this->australianPostCode = $australianPostCode;
        return $this;
    }
    
    /**
     * Gets codablockF
     * @return bool
     */
    public function getCodablockF()
    {
        return $this->codablockF;
    }
  
    /**
     * Sets codablockF
     * @param bool $codablockF 
     * @return $this
     */
    public function setCodablockF($codablockF)
    {
        
        $this->codablockF = $codablockF;
        return $this;
    }
    
    /**
     * Gets code16K
     * @return bool
     */
    public function getCode16K()
    {
        return $this->code16K;
    }
  
    /**
     * Sets code16K
     * @param bool $code16K 
     * @return $this
     */
    public function setCode16K($code16K)
    {
        
        $this->code16K = $code16K;
        return $this;
    }
    
    /**
     * Gets postNet
     * @return bool
     */
    public function getPostNet()
    {
        return $this->postNet;
    }
  
    /**
     * Sets postNet
     * @param bool $postNet 
     * @return $this
     */
    public function setPostNet($postNet)
    {
        
        $this->postNet = $postNet;
        return $this;
    }
    
    /**
     * Gets microPDF
     * @return bool
     */
    public function getMicroPDF()
    {
        return $this->microPDF;
    }
  
    /**
     * Sets microPDF
     * @param bool $microPDF 
     * @return $this
     */
    public function setMicroPDF($microPDF)
    {
        
        $this->microPDF = $microPDF;
        return $this;
    }
    
    /**
     * Gets code93
     * @return bool
     */
    public function getCode93()
    {
        return $this->code93;
    }
  
    /**
     * Sets code93
     * @param bool $code93 
     * @return $this
     */
    public function setCode93($code93)
    {
        
        $this->code93 = $code93;
        return $this;
    }
    
    /**
     * Gets msi
     * @return bool
     */
    public function getMsi()
    {
        return $this->msi;
    }
  
    /**
     * Sets msi
     * @param bool $msi 
     * @return $this
     */
    public function setMsi($msi)
    {
        
        $this->msi = $msi;
        return $this;
    }
    
    /**
     * Gets pharmacode
     * @return bool
     */
    public function getPharmacode()
    {
        return $this->pharmacode;
    }
  
    /**
     * Sets pharmacode
     * @param bool $pharmacode 
     * @return $this
     */
    public function setPharmacode($pharmacode)
    {
        
        $this->pharmacode = $pharmacode;
        return $this;
    }
    
    /**
     * Gets segment
     * @return bool
     */
    public function getSegment()
    {
        return $this->segment;
    }
  
    /**
     * Sets segment
     * @param bool $segment 
     * @return $this
     */
    public function setSegment($segment)
    {
        
        $this->segment = $segment;
        return $this;
    }
    
    /**
     * Gets circle
     * @return bool
     */
    public function getCircle()
    {
        return $this->circle;
    }
  
    /**
     * Sets circle
     * @param bool $circle 
     * @return $this
     */
    public function setCircle($circle)
    {
        
        $this->circle = $circle;
        return $this;
    }
    
    /**
     * Gets oval
     * @return bool
     */
    public function getOval()
    {
        return $this->oval;
    }
  
    /**
     * Sets oval
     * @param bool $oval 
     * @return $this
     */
    public function setOval($oval)
    {
        
        $this->oval = $oval;
        return $this;
    }
    
    /**
     * Gets checkbox
     * @return bool
     */
    public function getCheckbox()
    {
        return $this->checkbox;
    }
  
    /**
     * Sets checkbox
     * @param bool $checkbox 
     * @return $this
     */
    public function setCheckbox($checkbox)
    {
        
        $this->checkbox = $checkbox;
        return $this;
    }
    
    /**
     * Gets horizontalLine
     * @return bool
     */
    public function getHorizontalLine()
    {
        return $this->horizontalLine;
    }
  
    /**
     * Sets horizontalLine
     * @param bool $horizontalLine 
     * @return $this
     */
    public function setHorizontalLine($horizontalLine)
    {
        
        $this->horizontalLine = $horizontalLine;
        return $this;
    }
    
    /**
     * Gets verticalLine
     * @return bool
     */
    public function getVerticalLine()
    {
        return $this->verticalLine;
    }
  
    /**
     * Sets verticalLine
     * @param bool $verticalLine 
     * @return $this
     */
    public function setVerticalLine($verticalLine)
    {
        
        $this->verticalLine = $verticalLine;
        return $this;
    }
    
    /**
     * Gets underlinedField
     * @return bool
     */
    public function getUnderlinedField()
    {
        return $this->underlinedField;
    }
  
    /**
     * Sets underlinedField
     * @param bool $underlinedField 
     * @return $this
     */
    public function setUnderlinedField($underlinedField)
    {
        
        $this->underlinedField = $underlinedField;
        return $this;
    }
    
    /**
     * Gets all1D
     * @return bool
     */
    public function getAll1D()
    {
        return $this->all1D;
    }
  
    /**
     * Sets all1D
     * @param bool $all1D 
     * @return $this
     */
    public function setAll1D($all1D)
    {
        
        $this->all1D = $all1D;
        return $this;
    }
    
    /**
     * Gets all2D
     * @return bool
     */
    public function getAll2D()
    {
        return $this->all2D;
    }
  
    /**
     * Sets all2D
     * @param bool $all2D 
     * @return $this
     */
    public function setAll2D($all2D)
    {
        
        $this->all2D = $all2D;
        return $this;
    }
    
    /**
     * Gets allOMRElements
     * @return bool
     */
    public function getAllOMRElements()
    {
        return $this->allOMRElements;
    }
  
    /**
     * Sets allOMRElements
     * @param bool $allOMRElements 
     * @return $this
     */
    public function setAllOMRElements($allOMRElements)
    {
        
        $this->allOMRElements = $allOMRElements;
        return $this;
    }
    
    /**
     * Gets all
     * @return bool
     */
    public function getAll()
    {
        return $this->all;
    }
  
    /**
     * Sets all
     * @param bool $all 
     * @return $this
     */
    public function setAll($all)
    {
        
        $this->all = $all;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\Bytescout\Client\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\Bytescout\Client\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
